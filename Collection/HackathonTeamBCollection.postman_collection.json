{
	"info": {
		"_postman_id": "33ca72f6-ceed-462c-9e71-f9a5f95b774a",
		"name": "HackathonTeamBCollection",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Create new booking",
			"item": [
				{
					"name": "Create Auth Token",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\" : \"admin\",\n    \"password\" : \"password123\"\n}\n",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url}}/auth",
							"host": [
								"{{url}}"
							],
							"path": [
								"auth"
							]
						},
						"description": "To generate authorization token"
					},
					"response": []
				},
				{
					"name": "Create Booking",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0de356ff-6842-45b4-9905-df2b10bedd8c",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response Content-Type should be json\", function () {",
									"    pm.response.to.be.json;",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");",
									"});",
									"",
									"// Set booking ID in environment variable",
									"pm.test(\"Set booking ID to environment variable\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.environment.set(\"booking_id\", jsonData.bookingid);",
									"    // console.log(jsonData.bookingid);",
									"});",
									"",
									"// Validate booking details",
									"pm.test(\"Validate booking detail \", function () {",
									"    var jsonReqData_firstname =pm.variables.get(\"firstname\");",
									"    var jsonReqData_lastname =pm.variables.get(\"lastname\");",
									"    var jsonReqData_totalprice =pm.variables.get(\"totalprice\");",
									"    var jsonReqData_depositpaid =pm.variables.get(\"depositpaid\");",
									"    var jsonReqData_bookingdates_checkin =pm.variables.get(\"checkin\");",
									"    var jsonReqData_bookingdates_checkout =pm.variables.get(\"checkout\");",
									"    var jsonReqData_additionalneeds =pm.variables.get(\"additionalneeds\");",
									"    ",
									"    var jsonResData = pm.response.json();",
									"    pm.expect(jsonResData.booking.firstname).to.eql(jsonReqData_firstname);",
									"    pm.expect(jsonResData.booking.lastname).to.eql(jsonReqData_lastname);",
									"    pm.expect(jsonResData.booking.totalprice).to.eql(jsonReqData_totalprice);",
									"    pm.expect(jsonResData.booking.depositpaid).to.eql(jsonReqData_depositpaid);",
									"    pm.expect(jsonResData.booking.bookingdates.checkin).to.eql(jsonReqData_bookingdates_checkin);",
									"    pm.expect(jsonResData.booking.bookingdates.checkout).to.eql(jsonReqData_bookingdates_checkout);",
									"    pm.expect(jsonResData.booking.additionalneeds).to.eql(jsonReqData_additionalneeds);",
									"});",
									"",
									"// pm.test(\"Validate booking detail \", function () {",
									"//     var jsonReqData = JSON.parse(request.data);",
									"//     var jsonResData = pm.response.json();",
									"//     pm.expect(jsonReqData.firstname).to.eql(jsonResData.booking.firstname);",
									"//     pm.expect(jsonReqData.lastname).to.eql(jsonResData.booking.lastname);",
									"//     pm.expect(jsonReqData.totalprice).to.eql(jsonResData.booking.totalprice);",
									"//     pm.expect(jsonReqData.depositpaid).to.eql(jsonResData.booking.depositpaid);",
									"//     pm.expect(jsonReqData.bookingdates.checkin).to.eql(jsonResData.booking.bookingdates.checkin);",
									"//     pm.expect(jsonReqData.bookingdates.checkout).to.eql(jsonResData.booking.bookingdates.checkout);",
									"//     pm.expect(jsonReqData.additionalneeds).to.eql(jsonResData.booking.additionalneeds);",
									"// });",
									"",
									"",
									"// validate JSON schema with by default",
									"pm.test(\"Validate Schema\", () => {",
									"    // Get the JSON Schema",
									"    const createBooking_JSONSchema = JSON.parse(environment.createBooking_JSONSchema);",
									"    pm.response.to.have.jsonSchema(createBooking_JSONSchema);",
									"});",
									"",
									"// Validate JSON schema with tv4",
									"pm.test(\"Validate schema with tv4\", function() {",
									"    pm.expect(tv4.validate(pm.response.json(), JSON.parse(pm.environment.get('createBooking_JSONSchema')), false, true), tv4.error).to.be.true;",
									"})",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"firstname\": \"{{firstname}}\",\n    \"lastname\": \"{{lastname}}\",\n    \"totalprice\": {{totalprice}},\n    \"depositpaid\": {{depositpaid}},\n    \"bookingdates\": {\n        \"checkin\": \"{{checkin}}\",\n        \"checkout\": \"{{checkout}}\"\n    },\n    \"additionalneeds\": \"{{additionalneeds}}\"\n}"
						},
						"url": {
							"raw": "{{url}}/booking",
							"host": [
								"{{url}}"
							],
							"path": [
								"booking"
							]
						},
						"description": "API to create a new booking"
					},
					"response": []
				},
				{
					"name": "GetBooking",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "171b0554-b039-4550-9c42-297f6df58410",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Validate Schema\", () => {",
									"    // Get the JSON Schema",
									"    const getBooking_JSONSchema = JSON.parse(environment.getBooking_JSONSchema);",
									"    pm.response.to.have.jsonSchema(getBooking_JSONSchema);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/booking/{{booking_id}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"booking",
								"{{booking_id}}"
							]
						},
						"description": "API to get the booking details"
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "04cf0607-fa0f-42a6-a62a-ffa4f24347d2",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "f251628b-2df2-481c-9bdf-465bf2770339",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Update booking",
			"item": [
				{
					"name": "Auth Token",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"admin\",\n    \"password\": \"password123\"\n\n}"
						},
						"url": {
							"raw": "{{url}}/auth",
							"host": [
								"{{url}}"
							],
							"path": [
								"auth"
							]
						},
						"description": "API Request to create authorization token"
					},
					"response": []
				},
				{
					"name": "CreateBooking",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4f923b81-673e-491f-837b-0c49fed6b257",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response Content-Type should be json\", function () {",
									"    pm.response.to.be.json;",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");",
									"});",
									"",
									"pm.test(\"Set booking ID to environment variable\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.environment.set(\"booking_id\", jsonData.bookingid);",
									"    // console.log(jsonData.bookingid);",
									"});",
									"",
									"// Validate booking details",
									"pm.test(\"Validate booking detail \", function () {",
									"    var jsonReqData_firstname =pm.variables.get(\"firstname\");",
									"    var jsonReqData_lastname =pm.variables.get(\"lastname\");",
									"    var jsonReqData_totalprice =pm.variables.get(\"totalprice\");",
									"    var jsonReqData_depositpaid =pm.variables.get(\"depositpaid\");",
									"    var jsonReqData_bookingdates_checkin =pm.variables.get(\"checkin\");",
									"    var jsonReqData_bookingdates_checkout =pm.variables.get(\"checkout\");",
									"    var jsonReqData_additionalneeds =pm.variables.get(\"additionalneeds\");",
									"    ",
									"    var jsonResData = pm.response.json();",
									"    pm.expect(jsonResData.booking.firstname).to.eql(jsonReqData_firstname);",
									"    pm.expect(jsonResData.booking.lastname).to.eql(jsonReqData_lastname);",
									"    pm.expect(jsonResData.booking.totalprice).to.eql(jsonReqData_totalprice);",
									"    pm.expect(jsonResData.booking.depositpaid).to.eql(jsonReqData_depositpaid);",
									"    pm.expect(jsonResData.booking.bookingdates.checkin).to.eql(jsonReqData_bookingdates_checkin);",
									"    pm.expect(jsonResData.booking.bookingdates.checkout).to.eql(jsonReqData_bookingdates_checkout);",
									"    pm.expect(jsonResData.booking.additionalneeds).to.eql(jsonReqData_additionalneeds);",
									"});",
									"",
									"// pm.test(\"Validate booking detail \", function () {",
									"//     var jsonReqData = JSON.parse(request.data);",
									"//     var jsonResData = pm.response.json();",
									"//     pm.expect(jsonReqData.firstname).to.eql(jsonResData.booking.firstname);",
									"//     pm.expect(jsonReqData.lastname).to.eql(jsonResData.booking.lastname);",
									"//     pm.expect(jsonReqData.totalprice).to.eql(jsonResData.booking.totalprice);",
									"//     pm.expect(jsonReqData.depositpaid).to.eql(jsonResData.booking.depositpaid);",
									"//     pm.expect(jsonReqData.bookingdates.checkin).to.eql(jsonResData.booking.bookingdates.checkin);",
									"//     pm.expect(jsonReqData.bookingdates.checkout).to.eql(jsonResData.booking.bookingdates.checkout);",
									"//     pm.expect(jsonReqData.additionalneeds).to.eql(jsonResData.booking.additionalneeds);",
									"// });",
									"",
									"pm.test(\"Validate Schema\", () => {",
									"    // Get the JSON Schema",
									"    const createBooking_JSONSchema = JSON.parse(environment.createBooking_JSONSchema);",
									"    pm.response.to.have.jsonSchema(createBooking_JSONSchema);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"firstname\": \"{{firstname}}\",\n    \"lastname\": \"{{lastname}}\",\n    \"totalprice\": {{totalprice}},\n    \"depositpaid\": {{depositpaid}},\n    \"bookingdates\": {\n        \"checkin\": \"{{checkin}}\",\n        \"checkout\": \"{{checkout}}\"\n    },\n    \"additionalneeds\": \"{{additionalneeds}}\"\n}"
						},
						"url": {
							"raw": "{{url}}/booking",
							"host": [
								"{{url}}"
							],
							"path": [
								"booking"
							]
						},
						"description": "API to create a new booking"
					},
					"response": []
				},
				{
					"name": "UpdateBooking",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8cd9ef6b-3ce7-4f16-a407-0c8b74f38687",
								"exec": [
									"",
									"test",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response Content-Type should be json\", function () {",
									"    pm.response.to.be.json;",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");",
									"});",
									"",
									"// Get the JSON Schema",
									"const updateBooking_JSONSchema = JSON.parse(environment.updateBooking_JSONSchema);",
									"",
									"pm.test(\"Validate Schema\", () => {",
									"pm.response.to.have.jsonSchema(updateBooking_JSONSchema);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "\nbody {\n    \"firstname\": \"{{firstname}}\",\n    \"lastname\": \"{{lastname}}\",\n    \"totalprice\": {{totalprice}},\n    \"depositpaid\": {{depositpaid}},\n    \"bookingdates\": {\n        \"checkin\": \"{{checkin}}\",\n        \"checkout\": \"{{checkout}}\"\n    },\n    \"additionalneeds\": \"{{additionalneeds}}\""
						},
						"url": {
							"raw": "{{url}}/booking/:id",
							"host": [
								"{{url}}"
							],
							"path": [
								"booking",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{booking_id}}"
								}
							]
						},
						"description": "API request to update booking details"
					},
					"response": []
				},
				{
					"name": "GetBooking",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6ca50fc5-3584-4d8b-aa05-1d1ed0df99b1",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Validate Schema\", () => {",
									"    // Get the JSON Schema",
									"    const getBooking_JSONSchema = JSON.parse(environment.getBooking_JSONSchema);",
									"    pm.response.to.have.jsonSchema(getBooking_JSONSchema);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/booking/{{booking_id}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"booking",
								"{{booking_id}}"
							]
						},
						"description": "API Request to get the booking details"
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Update Partial Booking",
			"item": [
				{
					"name": "Auth Token",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"admin\",\n    \"password\": \"password123\"\n\n}"
						},
						"url": {
							"raw": "{{url}}/auth",
							"host": [
								"{{url}}"
							],
							"path": [
								"auth"
							]
						},
						"description": "API Request to create authorization token"
					},
					"response": []
				},
				{
					"name": "CreateBooking",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"firstname\": \"{{firstname}}\",\n    \"lastname\": \"{{lastname}}\",\n    \"totalprice\": {{totalprice}},\n    \"depositpaid\": {{depositpaid}},\n    \"bookingdates\": {\n        \"checkin\": \"{{checkin}}\",\n        \"checkout\": \"{{checkout}}\"\n    },\n    \"additionalneeds\": \"{{additionalneeds}}\"\n}"
						},
						"url": {
							"raw": "{{url}}/booking",
							"host": [
								"{{url}}"
							],
							"path": [
								"booking"
							]
						},
						"description": "API to create a new booking"
					},
					"response": []
				},
				{
					"name": "UpdateBooking",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "88b76bbf-0db2-4725-a5f4-0ded37f894cc",
								"exec": [
									"",
									"test",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response Content-Type should be json\", function () {",
									"    pm.response.to.be.json;",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");",
									"});",
									"",
									"// Get the JSON Schema",
									"const updateBooking_JSONSchema = JSON.parse(environment.updateBooking_JSONSchema);",
									"",
									"pm.test(\"Validate Schema\", () => {",
									"pm.response.to.have.jsonSchema(updateBooking_JSONSchema);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Cookie",
								"value": "token={{access_token}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "\n {\n    \"firstname\": \"James\",\n    \"lastname\": \"Hunt\"\n }"
						},
						"url": {
							"raw": "{{url}}/booking/:id",
							"host": [
								"{{url}}"
							],
							"path": [
								"booking",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{booking_id}}"
								}
							]
						},
						"description": "API request to update booking details"
					},
					"response": []
				},
				{
					"name": "GetBooking",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "96454f81-4dff-4a9f-ac86-59d286bc2475",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Validate Schema\", () => {",
									"    // Get the JSON Schema",
									"    const getBooking_JSONSchema = JSON.parse(environment.getBooking_JSONSchema);",
									"    pm.response.to.have.jsonSchema(getBooking_JSONSchema);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/booking/{{booking_id}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"booking",
								"{{booking_id}}"
							]
						},
						"description": "API Request to get the booking details"
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "5636c733-07de-49b7-8105-28a83b4e141a",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "de415b33-2028-4a4a-b2e0-379a315bb7c6",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Get All Booking Id",
			"item": [
				{
					"name": "GetAllBookings",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/booking",
							"host": [
								"{{url}}"
							],
							"path": [
								"booking"
							]
						},
						"description": "API to get all bookings."
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Delete Booking",
			"item": [
				{
					"name": "Create Auth Token",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\" : \"admin\",\n    \"password\" : \"password123\"\n}\n",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url}}/auth",
							"host": [
								"{{url}}"
							],
							"path": [
								"auth"
							]
						},
						"description": "To generate authorization token"
					},
					"response": []
				},
				{
					"name": "Create Booking",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "bba18c02-fb1a-44fe-b371-efd4c80ca4ad",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response Content-Type should be json\", function () {",
									"    pm.response.to.be.json;",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");",
									"});",
									"",
									"// Set booking ID in environment variable",
									"pm.test(\"Set booking ID to environment variable\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.environment.set(\"booking_id\", jsonData.bookingid);",
									"    // console.log(jsonData.bookingid);",
									"});",
									"",
									"// Validate booking details",
									"pm.test(\"Validate booking detail \", function () {",
									"    var jsonReqData_firstname =pm.variables.get(\"firstname\");",
									"    var jsonReqData_lastname =pm.variables.get(\"lastname\");",
									"    var jsonReqData_totalprice =pm.variables.get(\"totalprice\");",
									"    var jsonReqData_depositpaid =pm.variables.get(\"depositpaid\");",
									"    var jsonReqData_bookingdates_checkin =pm.variables.get(\"checkin\");",
									"    var jsonReqData_bookingdates_checkout =pm.variables.get(\"checkout\");",
									"    var jsonReqData_additionalneeds =pm.variables.get(\"additionalneeds\");",
									"    ",
									"    var jsonResData = pm.response.json();",
									"    pm.expect(jsonResData.booking.firstname).to.eql(jsonReqData_firstname);",
									"    pm.expect(jsonResData.booking.lastname).to.eql(jsonReqData_lastname);",
									"    pm.expect(jsonResData.booking.totalprice).to.eql(jsonReqData_totalprice);",
									"    pm.expect(jsonResData.booking.depositpaid).to.eql(jsonReqData_depositpaid);",
									"    pm.expect(jsonResData.booking.bookingdates.checkin).to.eql(jsonReqData_bookingdates_checkin);",
									"    pm.expect(jsonResData.booking.bookingdates.checkout).to.eql(jsonReqData_bookingdates_checkout);",
									"    pm.expect(jsonResData.booking.additionalneeds).to.eql(jsonReqData_additionalneeds);",
									"});",
									"",
									"// pm.test(\"Validate booking detail \", function () {",
									"//     var jsonReqData = JSON.parse(request.data);",
									"//     var jsonResData = pm.response.json();",
									"//     pm.expect(jsonReqData.firstname).to.eql(jsonResData.booking.firstname);",
									"//     pm.expect(jsonReqData.lastname).to.eql(jsonResData.booking.lastname);",
									"//     pm.expect(jsonReqData.totalprice).to.eql(jsonResData.booking.totalprice);",
									"//     pm.expect(jsonReqData.depositpaid).to.eql(jsonResData.booking.depositpaid);",
									"//     pm.expect(jsonReqData.bookingdates.checkin).to.eql(jsonResData.booking.bookingdates.checkin);",
									"//     pm.expect(jsonReqData.bookingdates.checkout).to.eql(jsonResData.booking.bookingdates.checkout);",
									"//     pm.expect(jsonReqData.additionalneeds).to.eql(jsonResData.booking.additionalneeds);",
									"// });",
									"",
									"",
									"// validate JSON schema with by default",
									"pm.test(\"Validate Schema\", () => {",
									"    // Get the JSON Schema",
									"    const createBooking_JSONSchema = JSON.parse(environment.createBooking_JSONSchema);",
									"    pm.response.to.have.jsonSchema(createBooking_JSONSchema);",
									"});",
									"",
									"// Validate JSON schema with tv4",
									"pm.test(\"Validate schema with tv4\", function() {",
									"    pm.expect(tv4.validate(pm.response.json(), JSON.parse(pm.environment.get('createBooking_JSONSchema')), false, true), tv4.error).to.be.true;",
									"})",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"firstname\": \"{{firstname}}\",\n    \"lastname\": \"{{lastname}}\",\n    \"totalprice\": {{totalprice}},\n    \"depositpaid\": {{depositpaid}},\n    \"bookingdates\": {\n        \"checkin\": \"{{checkin}}\",\n        \"checkout\": \"{{checkout}}\"\n    },\n    \"additionalneeds\": \"{{additionalneeds}}\"\n}"
						},
						"url": {
							"raw": "{{url}}/booking",
							"host": [
								"{{url}}"
							],
							"path": [
								"booking"
							]
						},
						"description": "API to create a new booking"
					},
					"response": []
				},
				{
					"name": "DeleteBooking",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": ""
						},
						"description": "API request to delete a booking"
					},
					"response": []
				},
				{
					"name": "Get Booking",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": ""
						},
						"description": "API to verify that the booking id is deleted"
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "2dab7c01-468b-4f4a-a93a-7353571201df",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "5edfc190-b069-4f98-ba69-274fdf0f55c0",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"protocolProfileBehavior": {}
}