{
	"info": {
		"_postman_id": "385aeb4a-d779-4581-99d7-a1f1659e2431",
		"name": "Hackathon Team B collection",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Auth",
			"item": [
				{
					"name": "Get Auth Token",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\" : \"admin\",\n    \"password\" : \"password123\"\n}\n"
						},
						"url": {
							"raw": "{{url}}/auth",
							"host": [
								"{{url}}"
							],
							"path": [
								"auth"
							]
						},
						"description": "To generate authorization token"
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Booking",
			"item": [
				{
					"name": "GetBookingIds",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "cf4107ac-6d47-4973-abd4-a7e143c4a04d",
								"exec": [
									"//Verifying the response code is 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"//Verifying response using assertions",
									"pm.test(\"response should be okay to process\", function () { ",
									"    pm.response.to.have.jsonBody(); ",
									"    pm.response.to.not.have.jsonBody(\"error\"); ",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/booking",
							"host": [
								"{{url}}"
							],
							"path": [
								"booking"
							],
							"query": [
								{
									"key": "firstname",
									"value": "Sally",
									"disabled": true
								},
								{
									"key": "Lastname",
									"value": null,
									"disabled": true
								}
							]
						},
						"description": "Get API request to get all the booking ids."
					},
					"response": []
				},
				{
					"name": "GetBooking",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": ""
						},
						"description": "Returns a specific booking based upon the booking id provided"
					},
					"response": []
				},
				{
					"name": "CreateBooking",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"firstname\" : \"Akshay\",\n    \"lastname\" : \"Kumar\",\n    \"totalprice\" : 111,\n    \"depositpaid\" : true,\n    \"bookingdates\" : {\n        \"checkin\" : \"2018-01-01\",\n        \"checkout\" : \"2019-01-01\"\n    },\n    \"additionalneeds\" : \"Breakfast\"\n}"
						},
						"url": {
							"raw": "{{url}}/booking",
							"host": [
								"{{url}}"
							],
							"path": [
								"booking"
							]
						},
						"description": "Create a new booking."
					},
					"response": []
				},
				{
					"name": "UpdateBooking",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "password123",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"firstname\" : \"Sachin\",\n    \"lastname\" : \"Tendulkar\",\n    \"totalprice\" : 1001,\n    \"depositpaid\" : true,\n    \"bookingdates\" : {\n        \"checkin\" : \"2018-01-01\",\n        \"checkout\" : \"2019-01-01\"\n    },\n    \"additionalneeds\" : \"Breakfast\"\n}"
						},
						"url": {
							"raw": "{{url}}/booking/20",
							"host": [
								"{{url}}"
							],
							"path": [
								"booking",
								"20"
							]
						},
						"description": "Updates a current booking"
					},
					"response": []
				},
				{
					"name": "PartialUpdateBooking",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": ""
						},
						"description": "Updates a current booking with partial payloads."
					},
					"response": []
				},
				{
					"name": "DeleteBooking",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": ""
						},
						"description": "To delete a booking."
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Ping",
			"item": [
				{
					"name": "HealthCheck",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": ""
						},
						"description": "A simple health check endpoint to confirm whether the API is up and running."
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "02039e34-96c7-4272-8ae2-39bc99d1dc33",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "1bcc199f-c7cf-49ec-89a9-e7bf6976336d",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"protocolProfileBehavior": {}
}